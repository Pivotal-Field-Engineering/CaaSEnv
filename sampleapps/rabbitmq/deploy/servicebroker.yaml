apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: p-rmq-servicebroker
    app.kubernetes.io/name: p-rmq-servicebroker
    app.kubernetes.io/part-of: pivotal-rabbitmq
  name: p-rmq-servicebroker-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rabbitmq.pivotal.io
  resources:
  - rabbitmqclusters
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - rabbitmq.pivotal.io
  resources:
  - rabbitmqclusters/status
  verbs:
  - get
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/component: p-rmq-servicebroker
    app.kubernetes.io/name: p-rmq-servicebroker
    app.kubernetes.io/part-of: pivotal-rabbitmq
  name: p-rmq-servicebroker-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: p-rmq-servicebroker-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: pivotal-rabbitmq-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: p-rmq-servicebroker
    app.kubernetes.io/name: p-rmq-servicebroker
    app.kubernetes.io/part-of: pivotal-rabbitmq
  name: p-rmq-servicebroker-ingress
  namespace: pivotal-rabbitmq-system
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/name: p-rmq-servicebroker
  sessionAffinity: None
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: p-rmq-servicebroker
    app.kubernetes.io/name: p-rmq-servicebroker
    app.kubernetes.io/part-of: pivotal-rabbitmq
  name: p-rmq-servicebroker
  namespace: pivotal-rabbitmq-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: p-rmq-servicebroker
  template:
    metadata:
      labels:
        app.kubernetes.io/component: p-rmq-servicebroker
        app.kubernetes.io/name: p-rmq-servicebroker
        app.kubernetes.io/part-of: pivotal-rabbitmq
    spec:
      imagePullSecrets:
      - name: regsecret     
      containers:
      - image: harbor.caas.pez.pivotal.io/rabbitmq/rabbitmq-for-kubernetes-servicebroker:0.6.22
        name: servicebroker
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 200m
            memory: 500Mi
          requests:
            cpu: 200m
            memory: 500Mi
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
